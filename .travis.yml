language: cpp

#compiler: 
#  - gcc
#  - clang TODO!

sudo: required

matrix:
  include:
    - os: linux
      dist: trusty
    - os: osx
      osx_image: xcode8.2

before_install:
  - if [ $TRAVIS_OS_NAME == osx ]; then export PATH=/usr/bin:$PATH; fi

  - if [ $TRAVIS_OS_NAME == linux ]; then sudo add-apt-repository "deb http://archive.ubuntu.com/ubuntu/ zesty main universe"; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then sudo apt-get update; fi

install:
  ### LINUX
  - if [ $TRAVIS_OS_NAME == linux ]; then sudo apt-get install --no-install-recommends -t zesty -y lcov libgsl0-dev libeigen3-dev libboost1.63-dev; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then sudo apt-get install --no-install-recommends -t zesty -y r-base-dev g++; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then sudo apt-get install --no-install-recommends -t zesty -y doxygen doxygen-doc doxygen-gui graphviz; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then sudo apt-get autoremove; fi # in particular remove old compilers so that new ones are the default
  - if [ $TRAVIS_OS_NAME == linux ]; then export R_PACKAGES='c("VineCopula")'; fi

  ### OSX
  - if [ $TRAVIS_OS_NAME == osx ]; then brew update && brew tap homebrew/science && brew install lcov eigen gsl; fi

  - if [ $TRAVIS_OS_NAME == osx ]; then rm /usr/local/include/c++; fi # https://github.com/Homebrew/brew/issues/1742#issuecomment-277308817
  - if [ $TRAVIS_OS_NAME == osx ]; then brew install r; fi

  - if [ $TRAVIS_OS_NAME == osx ]; then brew install doxygen graphviz; fi
  - if [ $TRAVIS_OS_NAME == osx ]; then export R_PACKAGES='c("VineCopula")'; fi

  ### Common
  - sudo Rscript -e 'withCallingHandlers(install.packages('$R_PACKAGES', repos="http://cran.rstudio.com/"), warning=function(x) { message(x); quit(status=1, save="no") })'

  - if [ $TRAVIS_OS_NAME == linux ]; then cd ..; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then git clone https://github.com/stevengj/nlopt.git; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then cd nlopt; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then mkdir build; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then cd build; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then make; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then sudo make install; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then cd ../..; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then cd vinecopulib; fi
  - if [ $TRAVIS_OS_NAME == osx ]; then brew install --HEAD nlopt; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then export CMAKE_ARGS="-DCODE_COVERAGE=ON"; fi
  

script:
  - mkdir release
  - mkdir debug
  - cd debug
  - cmake .. $CMAKE_ARGS -DOPT_ASAN=OFF -DCMAKE_BUILD_TYPE=Debug
  - if [ $TRAVIS_OS_NAME == linux ]; then make vinecopulib_coverage; else make; fi
  - cd ../release
  - cmake .. -DCMAKE_BUILD_TYPE=Release && make && sudo make install && make doc
  - bin/test_all
  - cd ../examples/bicop
  - mkdir build
  - cd build
  - cmake .. && VERBOSE=1 make
  - cd ../bin
  - ./main

after_success:
  # Creating report
  - if [ $TRAVIS_OS_NAME == linux ]; then cd debug; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then lcov --directory . --capture --output-file coverage.info; fi # capture coverage info
  - if [ $TRAVIS_OS_NAME == linux ]; then lcov --remove coverage.info '/usr/*' --output-file coverage.info; fi # filter out external includes
  - if [ $TRAVIS_OS_NAME == linux ]; then lcov --remove coverage.info '/Applications/*' --output-file coverage.info; fi # filter out more external includes
  - if [ $TRAVIS_OS_NAME == linux ]; then lcov --remove coverage.info '*test*' --output-file coverage.info; fi # filter out tests
  - if [ $TRAVIS_OS_NAME == linux ]; then lcov --remove coverage.info '*examples*' --output-file coverage.info; fi # filter out examples
  - if [ $TRAVIS_OS_NAME == linux ]; then lcov --list coverage.info; fi #debug info
  # Uploading report to CodeCov
  - if [ $TRAVIS_OS_NAME == linux ]; then bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"; fi
