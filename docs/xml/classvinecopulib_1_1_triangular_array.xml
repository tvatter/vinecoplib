<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classvinecopulib_1_1_triangular_array" kind="class" language="C++" prot="public">
    <compoundname>vinecopulib::TriangularArray</compoundname>
    <includes refid="triangular__array_8hpp" local="no">triangular_array.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classvinecopulib_1_1_triangular_array_1a9516f42110e2f9b0836ea488b338b639" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t vinecopulib::TriangularArray&lt; T &gt;::d_</definition>
        <argsstring></argsstring>
        <name>d_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vinecopulib/misc/triangular_array.hpp" line="63" column="1" bodyfile="include/vinecopulib/misc/triangular_array.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvinecopulib_1_1_triangular_array_1a9c949e8357f0330141db4a402a175816" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t vinecopulib::TriangularArray&lt; T &gt;::trunc_lvl_</definition>
        <argsstring></argsstring>
        <name>trunc_lvl_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vinecopulib/misc/triangular_array.hpp" line="64" column="1" bodyfile="include/vinecopulib/misc/triangular_array.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvinecopulib_1_1_triangular_array_1a9a550868789b35b266e69cdd57729fff" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; T &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;T&gt; &gt; vinecopulib::TriangularArray&lt; T &gt;::mat_</definition>
        <argsstring></argsstring>
        <name>mat_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vinecopulib/misc/triangular_array.hpp" line="65" column="1" bodyfile="include/vinecopulib/misc/triangular_array.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvinecopulib_1_1_triangular_array_1a4d1d1a1f64ab2c918e169dcb1d04f07f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vinecopulib::TriangularArray&lt; T &gt;::TriangularArray</definition>
        <argsstring>()=default</argsstring>
        <name>TriangularArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vinecopulib/misc/triangular_array.hpp" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classvinecopulib_1_1_triangular_array_1ab291264bdad179aed275517243cdad68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vinecopulib::TriangularArray&lt; T &gt;::TriangularArray</definition>
        <argsstring>(size_t d)</argsstring>
        <name>TriangularArray</name>
        <param>
          <type>size_t</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>construct a triangular array of dimension <computeroutput>d</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The array has <computeroutput>d-1</computeroutput> columns and <computeroutput>d-1</computeroutput> rows. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>the dimension of the underlying vine. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vinecopulib/misc/triangular_array.hpp" line="45" column="1" bodyfile="include/vinecopulib/misc/triangular_array.hpp" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classvinecopulib_1_1_triangular_array_1a6c4a21f452a2c8094d452996f1f58401" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vinecopulib::TriangularArray&lt; T &gt;::TriangularArray</definition>
        <argsstring>(size_t d, size_t trunc_lvl)</argsstring>
        <name>TriangularArray</name>
        <param>
          <type>size_t</type>
          <declname>d</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>trunc_lvl</declname>
        </param>
        <briefdescription>
<para>construct a truncated triangular array </para>        </briefdescription>
        <detaileddescription>
<para>The array has <computeroutput>d-1</computeroutput> columns and <computeroutput>min(trunv_lvl, d-1)</computeroutput> rows. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>the dimension of the vine. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>trunc_lvl</parametername>
</parameternamelist>
<parameterdescription>
<para>the truncation level. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vinecopulib/misc/triangular_array.hpp" line="46" column="1" bodyfile="include/vinecopulib/misc/triangular_array.hpp" bodystart="82" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classvinecopulib_1_1_triangular_array_1aeaee00fbe12f2bce4bf7f2a4479417f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T &amp; vinecopulib::TriangularArray&lt; T &gt;::operator()</definition>
        <argsstring>(size_t tree, size_t edge)</argsstring>
        <name>operator()</name>
        <param>
          <type>size_t</type>
          <declname>tree</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>edge</declname>
        </param>
        <briefdescription>
<para>access one element of the trapezoid (writable). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>the tree level. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>edge</parametername>
</parameternamelist>
<parameterdescription>
<para>the edge in this tree. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vinecopulib/misc/triangular_array.hpp" line="48" column="1" bodyfile="include/vinecopulib/misc/triangular_array.hpp" bodystart="98" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classvinecopulib_1_1_triangular_array_1a9909caab2252198416abcb3294181dee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T vinecopulib::TriangularArray&lt; T &gt;::operator()</definition>
        <argsstring>(size_t tree, size_t edge) const</argsstring>
        <name>operator()</name>
        <param>
          <type>size_t</type>
          <declname>tree</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>edge</declname>
        </param>
        <briefdescription>
<para>access one element of the trapezoid (non-writable). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>the tree level. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>edge</parametername>
</parameternamelist>
<parameterdescription>
<para>the edge in this tree. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vinecopulib/misc/triangular_array.hpp" line="49" column="1" bodyfile="include/vinecopulib/misc/triangular_array.hpp" bodystart="109" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classvinecopulib_1_1_triangular_array_1a30cdac9d2e0e13bce3c6c054283b6fb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; T &gt; &amp;</type>
        <definition>std::vector&lt; T &gt; &amp; vinecopulib::TriangularArray&lt; T &gt;::operator[]</definition>
        <argsstring>(size_t column)</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>column</declname>
        </param>
        <briefdescription>
<para>access one column of the trapezoid (writable). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>column</parametername>
</parameternamelist>
<parameterdescription>
<para>which column to extract. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vinecopulib/misc/triangular_array.hpp" line="50" column="1" bodyfile="include/vinecopulib/misc/triangular_array.hpp" bodystart="119" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classvinecopulib_1_1_triangular_array_1a3e6654bb40de5c4b615ea37a8ffecac1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; T &gt;</type>
        <definition>std::vector&lt; T &gt; vinecopulib::TriangularArray&lt; T &gt;::operator[]</definition>
        <argsstring>(size_t column) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>column</declname>
        </param>
        <briefdescription>
<para>access one column of the trapezoid (non-writable). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>column</parametername>
</parameternamelist>
<parameterdescription>
<para>which column to extract. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vinecopulib/misc/triangular_array.hpp" line="51" column="1" bodyfile="include/vinecopulib/misc/triangular_array.hpp" bodystart="128" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classvinecopulib_1_1_triangular_array_1a2bb6d8ef421bbcef635970000b072727" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool vinecopulib::TriangularArray&lt; T &gt;::operator==</definition>
        <argsstring>(const TriangularArray&lt; T &gt; &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classvinecopulib_1_1_triangular_array" kindref="compound">TriangularArray</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>equality operator to compare two <ref refid="classvinecopulib_1_1_triangular_array" kindref="compound">TriangularArray</ref> objects. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>right-hand-side of the equality operator. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vinecopulib/misc/triangular_array.hpp" line="52" column="1" bodyfile="include/vinecopulib/misc/triangular_array.hpp" bodystart="174" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classvinecopulib_1_1_triangular_array_1ae9d39595702831aca33b981ef7687a1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vinecopulib::TriangularArray&lt; T &gt;::set_column</definition>
        <argsstring>(size_t column, const std::vector&lt; size_t &gt; &amp;new_column)</argsstring>
        <name>set_column</name>
        <param>
          <type>size_t</type>
          <declname>column</declname>
        </param>
        <param>
          <type>const std::vector&lt; size_t &gt; &amp;</type>
          <declname>new_column</declname>
        </param>
        <briefdescription>
<para>set one column of the trapezoid. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>column</parametername>
</parameternamelist>
<parameterdescription>
<para>which column to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_column</parametername>
</parameternamelist>
<parameterdescription>
<para>the column column to set. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vinecopulib/misc/triangular_array.hpp" line="54" column="1" bodyfile="include/vinecopulib/misc/triangular_array.hpp" bodystart="138" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classvinecopulib_1_1_triangular_array_1ab6d8130336a957271b1db9018781e69a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vinecopulib::TriangularArray&lt; T &gt;::truncate</definition>
        <argsstring>(size_t trunc_lvl)</argsstring>
        <name>truncate</name>
        <param>
          <type>size_t</type>
          <declname>trunc_lvl</declname>
        </param>
        <briefdescription>
<para>truncates the trapezoid. If the trapezoid is already truncated at a level less than <computeroutput>trunc_lvl</computeroutput>, the function does nothing. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>trunc_lvl</parametername>
</parameternamelist>
<parameterdescription>
<para>the truncation level. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vinecopulib/misc/triangular_array.hpp" line="55" column="1" bodyfile="include/vinecopulib/misc/triangular_array.hpp" bodystart="161" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classvinecopulib_1_1_triangular_array_1ae557ebefe25bfc18818e254ada5c91cb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t vinecopulib::TriangularArray&lt; T &gt;::get_trunc_lvl</definition>
        <argsstring>() const</argsstring>
        <name>get_trunc_lvl</name>
        <briefdescription>
<para>get the truncation level of the underlying vine. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vinecopulib/misc/triangular_array.hpp" line="57" column="1" bodyfile="include/vinecopulib/misc/triangular_array.hpp" bodystart="188" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classvinecopulib_1_1_triangular_array_1adb36a7916d7281707dcf50e40839bfb9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t vinecopulib::TriangularArray&lt; T &gt;::get_dim</definition>
        <argsstring>() const</argsstring>
        <name>get_dim</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get the dimension of the underlying vine (the matrix has <computeroutput>d-1</computeroutput> columns and <computeroutput>min(trunv_lvl, d-1)</computeroutput> rows). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vinecopulib/misc/triangular_array.hpp" line="58" column="1" bodyfile="include/vinecopulib/misc/triangular_array.hpp" bodystart="196" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classvinecopulib_1_1_triangular_array_1a2cd9d9617c7c3fc422ed67a6054b2d3a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string vinecopulib::TriangularArray&lt; T &gt;::str</definition>
        <argsstring>() const</argsstring>
        <name>str</name>
        <briefdescription>
<para>represent RightTrapezoid as a string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vinecopulib/misc/triangular_array.hpp" line="60" column="1" bodyfile="include/vinecopulib/misc/triangular_array.hpp" bodystart="203" bodyend="213"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Triangular arrays. </para>    </briefdescription>
    <detaileddescription>
<para>A triangular array behaves like a matrix with the structure <programlisting><codeline><highlight class="normal">x<sp/>x<sp/>x<sp/>x<sp/>x</highlight></codeline>
<codeline><highlight class="normal">x<sp/>x<sp/>x<sp/>x</highlight></codeline>
<codeline><highlight class="normal">x<sp/>x<sp/>x</highlight></codeline>
<codeline><highlight class="normal">x<sp/>x</highlight></codeline>
<codeline><highlight class="normal">x</highlight></codeline>
</programlisting> and all other elements omitted. This structure appears naturally in the representation of a vine copula model and related algorithms. Each row corresponds to one tree in the vine, starting from the top. In each row (= tree), each column represents an edge in this tree.</para><para>For truncated vine models the last few rows are omitted. For example, a 3-truncated version of the above array contains the elements <programlisting><codeline><highlight class="normal">x<sp/>x<sp/>x<sp/>x<sp/>x</highlight></codeline>
<codeline><highlight class="normal">x<sp/>x<sp/>x<sp/>x</highlight></codeline>
<codeline><highlight class="normal">x<sp/>x<sp/>x</highlight></codeline>
</programlisting> Only the elements indicated by <computeroutput>x</computeroutput>s are stored and can be accessed.</para><para>The data structure is templated and any type or class can be used to fill the entries (<computeroutput>x</computeroutput>s) of the triangular array. </para>    </detaileddescription>
    <location file="include/vinecopulib/misc/triangular_array.hpp" line="42" column="1" bodyfile="include/vinecopulib/misc/triangular_array.hpp" bodystart="42" bodyend="66"/>
    <listofallmembers>
      <member refid="classvinecopulib_1_1_triangular_array_1a9516f42110e2f9b0836ea488b338b639" prot="private" virt="non-virtual"><scope>vinecopulib::TriangularArray</scope><name>d_</name></member>
      <member refid="classvinecopulib_1_1_triangular_array_1adb36a7916d7281707dcf50e40839bfb9" prot="public" virt="non-virtual"><scope>vinecopulib::TriangularArray</scope><name>get_dim</name></member>
      <member refid="classvinecopulib_1_1_triangular_array_1ae557ebefe25bfc18818e254ada5c91cb" prot="public" virt="non-virtual"><scope>vinecopulib::TriangularArray</scope><name>get_trunc_lvl</name></member>
      <member refid="classvinecopulib_1_1_triangular_array_1a9a550868789b35b266e69cdd57729fff" prot="private" virt="non-virtual"><scope>vinecopulib::TriangularArray</scope><name>mat_</name></member>
      <member refid="classvinecopulib_1_1_triangular_array_1aeaee00fbe12f2bce4bf7f2a4479417f3" prot="public" virt="non-virtual"><scope>vinecopulib::TriangularArray</scope><name>operator()</name></member>
      <member refid="classvinecopulib_1_1_triangular_array_1a9909caab2252198416abcb3294181dee" prot="public" virt="non-virtual"><scope>vinecopulib::TriangularArray</scope><name>operator()</name></member>
      <member refid="classvinecopulib_1_1_triangular_array_1a2bb6d8ef421bbcef635970000b072727" prot="public" virt="non-virtual"><scope>vinecopulib::TriangularArray</scope><name>operator==</name></member>
      <member refid="classvinecopulib_1_1_triangular_array_1a30cdac9d2e0e13bce3c6c054283b6fb7" prot="public" virt="non-virtual"><scope>vinecopulib::TriangularArray</scope><name>operator[]</name></member>
      <member refid="classvinecopulib_1_1_triangular_array_1a3e6654bb40de5c4b615ea37a8ffecac1" prot="public" virt="non-virtual"><scope>vinecopulib::TriangularArray</scope><name>operator[]</name></member>
      <member refid="classvinecopulib_1_1_triangular_array_1ae9d39595702831aca33b981ef7687a1d" prot="public" virt="non-virtual"><scope>vinecopulib::TriangularArray</scope><name>set_column</name></member>
      <member refid="classvinecopulib_1_1_triangular_array_1a2cd9d9617c7c3fc422ed67a6054b2d3a" prot="public" virt="non-virtual"><scope>vinecopulib::TriangularArray</scope><name>str</name></member>
      <member refid="classvinecopulib_1_1_triangular_array_1a4d1d1a1f64ab2c918e169dcb1d04f07f" prot="public" virt="non-virtual"><scope>vinecopulib::TriangularArray</scope><name>TriangularArray</name></member>
      <member refid="classvinecopulib_1_1_triangular_array_1ab291264bdad179aed275517243cdad68" prot="public" virt="non-virtual"><scope>vinecopulib::TriangularArray</scope><name>TriangularArray</name></member>
      <member refid="classvinecopulib_1_1_triangular_array_1a6c4a21f452a2c8094d452996f1f58401" prot="public" virt="non-virtual"><scope>vinecopulib::TriangularArray</scope><name>TriangularArray</name></member>
      <member refid="classvinecopulib_1_1_triangular_array_1a9c949e8357f0330141db4a402a175816" prot="private" virt="non-virtual"><scope>vinecopulib::TriangularArray</scope><name>trunc_lvl_</name></member>
      <member refid="classvinecopulib_1_1_triangular_array_1ab6d8130336a957271b1db9018781e69a" prot="public" virt="non-virtual"><scope>vinecopulib::TriangularArray</scope><name>truncate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
